import groovy.json.JsonSlurper

pipeline {
    agent any
    triggers {
        // =============================================
        // SET FREQUENCY OF REPORTING
        // =============================================
        cron('H 12 * * 1')
    }
    stages {
        stage('Email Report') {
            steps {
                // =============================================
                // SET JENKINS CREDENTIALS "Username with password"
                // These credentials will be used for API access
                // =============================================
                withCredentials([usernamePassword(
                    credentialsId: 'api-login',
                    usernameVariable: 'API_USER',
                    passwordVariable: 'API_PASSWORD',
                )]) {
                    script {
                        // =============================================
                        // Reports will be sent to: username@EMAIL__RECIEVERS_DOMAIN
                        // EMAIL__RECIEVERS_DOMAIN must be set in .env
                        // =============================================
                        def responsible_list_response = sh(
                            script: '''
                                curl -s -Lu "$API_USER:$API_PASSWORD" \
                                    "http://localhost:8000/api/v1/responsible"
                            ''',
                            returnStdout: true
                        ).trim()

                        def responsible_list = new groovy.json.JsonSlurper().parseText(responsible_list_response)

                        if (!(responsible_list instanceof List)) {
                            error "A list of responsible persons was expected"
                        }

                        echo "Responsible list from API: ${responsible_list}"

                        def excludeList = ["", "DevOps", "Devops", "devops"]

                        responsible_list.each { responsible ->
                            if (responsible && responsible.trim() && !(responsible in excludeList)) {
                                echo "Sending report to: ${responsible}"
                                withEnv(["RESPONSIBLE=${responsible}"]) {
                                    sh '''
                                        curl -s -Lu "$API_USER:$API_PASSWORD" \
                                            "http://localhost:8000/api/v1/hosts/$RESPONSIBLE?email_notify=1"
                                    '''
                                }
                            } else {
                                echo "Skipped responsible: '${responsible}'"
                            }
                        }
                    }
                }
            }
        }
    }
}
